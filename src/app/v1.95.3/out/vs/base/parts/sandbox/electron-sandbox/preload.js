"use strict";(function(){const{ipcRenderer:o,webFrame:t,contextBridge:n,webUtils:i}=require("electron");if(!process.isMainFrame){const e={webUtils:{getPathForFile(r){return i.getPathForFile(r)}}};if(process.contextIsolated)try{n.exposeInMainWorld("vscode",e)}catch(r){console.error(r)}else window.vscode=e;return}function s(e){if(!e||!e.startsWith("vscode:"))throw new Error(`Unsupported event IPC channel '${e}'`);return!0}function l(e){for(const r of process.argv)if(r.indexOf(`--${e}=`)===0)return r.split("=")[1]}let c;const a=(async()=>{const e=l("vscode-window-config");if(!e)throw new Error("Preload: did not find expected vscode-window-config in renderer process arguments list.");try{s(e);const r=c=await o.invoke(e);return Object.assign(process.env,r.userEnv),t.setZoomLevel(r.zoomLevel??0),r}catch(r){throw new Error(`Preload: unable to fetch vscode-window-config: ${r}`)}})(),f=(async()=>{const[e,r]=await Promise.all([(async()=>(await a).userEnv)(),o.invoke("vscode:fetchShellEnv")]);return{...process.env,...r,...e}})(),u={ipcRenderer:{send(e,...r){s(e)&&o.send(e,...r)},invoke(e,...r){return s(e),o.invoke(e,...r)},on(e,r){return s(e),o.on(e,r),this},once(e,r){return s(e),o.once(e,r),this},removeListener(e,r){return s(e),o.removeListener(e,r),this}},ipcMessagePort:{acquire(e,r){if(s(e)){const d=(v,p)=>{r===p&&(o.off(e,d),window.postMessage(r,"*",v.ports))};o.on(e,d)}}},webFrame:{setZoomLevel(e){typeof e=="number"&&t.setZoomLevel(e)}},webUtils:{getPathForFile(e){return i.getPathForFile(e)}},process:{get platform(){return process.platform},get arch(){return process.arch},get env(){return{...process.env}},get versions(){return process.versions},get type(){return"renderer"},get execPath(){return process.execPath},cwd(){return process.env.VSCODE_CWD||process.execPath.substr(0,process.execPath.lastIndexOf(process.platform==="win32"?"\\":"/"))},shellEnv(){return f},getProcessMemoryInfo(){return process.getProcessMemoryInfo()},on(e,r){process.on(e,r)}},context:{configuration(){return c},async resolveConfiguration(){const e=await a;return e.cssModulesUpdateIpc&&(e.cssModules=await o.invoke(e.cssModulesUpdateIpc)),e}}};if(process.contextIsolated)try{n.exposeInMainWorld("vscode",u)}catch(e){console.error(e)}else window.vscode=u})();

//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/vs/base/parts/sandbox/electron-sandbox/preload.js.map

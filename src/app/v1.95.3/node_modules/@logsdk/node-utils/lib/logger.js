"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Logger = void 0;
const format_1 = require("./format");
const typeToLevel = {
    silent: 0,
    error: 1,
    warn: 2,
    verbose: 3,
};
const defaultConsumer = {
    write(level, message) {
        switch (level) {
            case 'error':
                console.error(message);
                break;
            case 'warn':
                console.warn(message);
                break;
            default:
                console.log(message);
        }
    },
};
class Logger {
    constructor(product) {
        this.product = product;
        this.levelIndex = 1;
        this.consumer = defaultConsumer;
        this.getLevelIndex = () => {
            return this.levelIndex;
        };
        this.getConsumer = () => {
            return this.consumer;
        };
    }
    propagate(subProduct) {
        const logger = new Logger(`${this.product}.${subProduct}`);
        logger.getLevelIndex = () => this.levelIndex;
        logger.getConsumer = () => this.consumer;
        return logger;
    }
    setLevel(level) {
        this.levelIndex = typeToLevel[level] || 1;
    }
    log(level, message, ...splats) {
        const str = (0, format_1.format)(message, ...splats);
        this.getConsumer().write(level, `[${this.product}] [${level}] ${str}`);
    }
    error(message, ...splats) {
        if (this.getLevelIndex() >= 1) {
            this.log('error', message, ...splats);
        }
    }
    warn(message, ...splats) {
        if (this.getLevelIndex() >= 2) {
            this.log('warn', message, ...splats);
        }
    }
    trace(message, ...splats) {
        if (this.getLevelIndex() >= 3) {
            this.log('trace', message, ...splats);
        }
    }
}
exports.Logger = Logger;

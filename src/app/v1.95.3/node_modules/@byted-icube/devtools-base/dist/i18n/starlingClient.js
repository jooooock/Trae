"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createI18nTranslator = exports.request = exports.Storage = exports.StarlingClient = void 0;
const starling_intl_1 = require("@ies/starling_intl");
const starling_client_core_1 = __importDefault(require("@ies/starling_client_core"));
const base_1 = require("../request/base");
const lru_cache_1 = require("lru-cache");
const constants_1 = require("../constants");
class StarlingClient extends starling_client_core_1.default {
    constructor(options) {
        if (!options.store)
            options.store = new Storage();
        if (!options.request)
            options.request = request;
        super(options);
    }
}
exports.StarlingClient = StarlingClient;
class Storage {
    _cahce = new lru_cache_1.LRUCache({ max: 500 });
    get(key, optionalDefaultValue) {
        return this._cahce.get(key) || optionalDefaultValue;
    }
    set(key, value) {
        return this._cahce.set(key, value);
    }
}
exports.Storage = Storage;
async function request(url, options) {
    const instance = (0, base_1.createRequestInstance)();
    const res = await instance.request({ url, method: 'get', ...options });
    return res;
}
exports.request = request;
function createI18nTranslator(options) {
    const i18n = new starling_intl_1.I18nConstructor();
    i18n.init({
        fallbackLng: constants_1.DEFAULT_STARLING_FALLBACK_LANG,
        lng: constants_1.DEFAULT_STARLING_LANG,
        ...options,
    });
    return i18n;
}
exports.createI18nTranslator = createI18nTranslator;

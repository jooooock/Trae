import { __assign } from "tslib";
var MAX_RTT = 700;
/**
 * This plugin is bound with BrowserConfigManager, so it can't be extract into @sdk/web
 */
export var TimeCalibrationPlugin = function (client) {
    var startTime;
    var hasCalibrated = false;
    client.on('init', function () {
        startTime = new Date().getTime();
        client.on('config', function () {
            var _a;
            var serverTime = (_a = client.config()) === null || _a === void 0 ? void 0 : _a.serverTimestamp;
            if (isNaN(serverTime) || Number(serverTime) <= 0 || hasCalibrated) {
                return;
            }
            hasCalibrated = true;
            var endTime = new Date().getTime();
            var potential_rtt = endTime - startTime;
            if (potential_rtt < MAX_RTT && serverTime) {
                var diff_1 = serverTime - (endTime + startTime) / 2;
                // if diff in [-600000, 0], considered to be caused by cache
                if (!isNaN(diff_1) && (diff_1 > 0 || diff_1 < -600000)) {
                    client.on('beforeBuild', function (ev) {
                        var _a;
                        return __assign(__assign({}, ev), { extra: __assign(__assign({}, ((_a = ev.extra) !== null && _a !== void 0 ? _a : {})), { sdk_offset: diff_1 !== null && diff_1 !== void 0 ? diff_1 : 0 }) });
                    });
                }
            }
        });
    });
};//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@byted-icube/devtools-base/node_modules/@slardar/web/esm/plugins/time-calibration.js.map
import { toObservable } from '@slardar/sdk-template';
/* eslint-disable @typescript-eslint/prefer-nullish-coalescing */
export function mockHistoryAndLocation(initHref) {
    var stack = [
        {
            state: {},
            title: '',
            url: initHref,
        },
    ];
    var location = {
        get href() {
            return stack.length ? stack[stack.length - 1].url : 'about:blank';
        },
    };
    var history = {
        pushState: function (state, title, url) {
            stack.push({
                state: state,
                title: title,
                url: url || location.href,
            });
        },
        replaceState: function (state, title, url) {
            var s = {
                state: state,
                title: title,
                url: url || location.href,
            };
            stack.pop();
            stack.push(s);
        },
    };
    var setHref = function (url) {
        stack.push({
            state: {},
            title: '',
            url: url,
        });
    };
    return {
        location: location,
        history: history,
        setHref: setHref,
    };
}
export var createSafeObserverWithNext = function (observer, next, completeCb, bufferTime) {
    if (bufferTime === void 0) { bufferTime = 0; }
    var cur = toObservable(bufferTime);
    try {
        next && (cur.next = next);
        observer(cur.next, cur.attach);
        completeCb && cur.complete(completeCb);
    }
    catch (_a) {
        //
    }
    return cur;
};//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@byted-icube/devtools-base/node_modules/@slardar/sdk-web/esm/collector/__test__/common.js.map
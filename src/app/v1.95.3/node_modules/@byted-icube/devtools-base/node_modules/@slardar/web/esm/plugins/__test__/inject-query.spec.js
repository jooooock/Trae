import test from 'ava';
import { createTestWebClient } from '../../__test__/util';
import { InjectQueryPlugin } from '../inject-query';
var browserEnv = require('browser-env');
test.before(function () {
    browserEnv();
});
test('InjectEnvPlugin default query', function (t) {
    var client = createTestWebClient();
    InjectQueryPlugin(client);
    client.init({
        bid: 'xx',
    });
    client.start();
    client.report({
        ev_type: 'pageview',
        payload: {
            pid: 'init-pid',
            source: 'init',
        },
        extra: {
            url: 'origin url',
        },
    });
    t.is(client.getSender().getEndpoint(), 'endpoint?biz_id=xx');
});
test('InjectEnvPlugin query when user set', function (t) {
    var client = createTestWebClient();
    InjectQueryPlugin(client);
    client.init({
        bid: 'xx',
        env: 'test',
        deviceId: 'ddid',
        release: 'rrelease',
    });
    client.start();
    client.report({
        ev_type: 'pageview',
        payload: {
            pid: 'init-pid',
            source: 'init',
        },
        extra: {
            url: 'origin url',
        },
    });
    t.is(client.getSender().getEndpoint(), 'endpoint?biz_id=xx');
});
test('InjectEnvPlugin query when user async set', function (t) {
    var client = createTestWebClient();
    InjectQueryPlugin(client);
    client.init({
        bid: 'xx',
        env: 'test',
        deviceId: 'ddid',
        release: 'rrelease',
    });
    client.config({
        release: 'release',
        env: 'production',
    });
    client.start();
    client.report({
        ev_type: 'pageview',
        payload: {
            pid: 'init-pid',
            source: 'init',
        },
        extra: {
            url: 'origin url',
        },
    });
    t.is(client.getSender().getEndpoint(), 'endpoint?biz_id=xx');
});//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@byted-icube/devtools-base/node_modules/@slardar/web/esm/plugins/__test__/inject-query.spec.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReadDirectoryTool = void 0;
const tslib_1 = require("tslib");
const path_browserify_1 = tslib_1.__importDefault(require("path-browserify"));
const i_tool_1 = require("../../common/base/i-tool");
const enum_1 = require("../../typing/enum");
const utils_1 = require("../../common/utils");
let ReadDirectoryTool = class ReadDirectoryTool extends i_tool_1.ITool {
    async run() {
        this._logger.info("read directory", JSON.stringify(this._input));
        const { directoryPath } = this._input;
        const directoryFullPath = await this._ide.getWorkspacePath(directoryPath);
        const dirs = await this._ide.readWorkspaceDir(directoryPath);
        return {
            files: await utils_1.Utils.promiseControl(dirs, async (dir) => {
                const fullPath = path_browserify_1.default.join(directoryFullPath, dir);
                const stat = await this._ide.statWorkspacePath(fullPath);
                const relativePath = await this._ide.toWorkspaceRelativePath(fullPath);
                if (stat.is_dir) {
                    return {
                        name: relativePath,
                        type: "directory",
                    };
                }
                return {
                    name: relativePath,
                    type: "file",
                };
            }),
        };
    }
};
exports.ReadDirectoryTool = ReadDirectoryTool;
exports.ReadDirectoryTool = ReadDirectoryTool = tslib_1.__decorate([
    (0, i_tool_1.ToolImpl)(enum_1.ToolType.READ_DIRECTORY)
], ReadDirectoryTool);

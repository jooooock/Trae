"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SSEHandler = void 0;
const tslib_1 = require("tslib");
const i_life_cycle_1 = require("../common/base/i-life-cycle");
const object_factory_1 = require("../impl-registry/object-factory");
let SSEHandler = class SSEHandler extends i_life_cycle_1.ILifeCycle {
    init(cancelToken) {
        this._cancelToken = cancelToken;
    }
    setListener(listener) {
        this._listener = listener;
    }
    event(event) {
        try {
            this._listener.onEvent(event).catch((err) => {
                this._logger.error("on event async error", err);
            });
        }
        catch (err) {
            this._logger.error("on event error", err.message);
        }
    }
    cancel() {
        this.setFinalized();
        this._cancelToken.cancel();
    }
    done(event) {
        this.setFinalized();
        try {
            this._listener.onDone(event).catch((err) => {
                this._logger.error("on done async error", err);
            });
        }
        catch (err) {
            this._logger.error("on done error", err.message);
        }
    }
};
exports.SSEHandler = SSEHandler;
tslib_1.__decorate([
    i_life_cycle_1.Alive,
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], SSEHandler.prototype, "event", null);
tslib_1.__decorate([
    i_life_cycle_1.Alive,
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", []),
    tslib_1.__metadata("design:returntype", void 0)
], SSEHandler.prototype, "cancel", null);
tslib_1.__decorate([
    i_life_cycle_1.Alive,
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], SSEHandler.prototype, "done", null);
exports.SSEHandler = SSEHandler = tslib_1.__decorate([
    object_factory_1.ExecutionInjectable
], SSEHandler);

import { __assign, __read } from "tslib";
import { initPrivateSubject, registerTearDownGroup, initSubjectInGlobal, noop, } from '@slardar/sdk-template';
import { FIRST_PV_SUBJECT_NAME, applyFirstPV } from '../../collector/client';
import { hiddenSubject, unloadSubject } from '../../collector/page';
import { hashSubject, historySubject } from '../../collector/route';
import { PAGEVIEW_EV_TYPE, SESSION_EV_TYPE } from '../../constants';
import { pvGetterWithRouteObserver } from '../../monitors/pageview';
import { apdexGetterWithHiddenObserver } from '../../monitors/pageview/apdex';
import { isManualMode, getViewId } from '../../monitors/pageview/util';
import { getPluginConfig } from './utils';
export var PAGEVIEW_MONITOR_PLUGIN_NAME = 'pageview';
export { getViewId } from '../../monitors/pageview/util';
var defaultConfig = {
    sendInit: true,
    routeMode: 'history',
    apdex: 2,
};
export function PageviewMonitorPlugin(client) {
    client.on('init', function () {
        var _a;
        var config = getPluginConfig(client, PAGEVIEW_MONITOR_PLUGIN_NAME, defaultConfig);
        if (!config || !location) {
            return;
        }
        var routeMode = config.routeMode, apdex = config.apdex;
        var report = client.report.bind(client);
        var handlePageviewChange = noop;
        // apdex start
        if (apdex) {
            var apdexTearDownGroup = [];
            var _b = __read(apdexGetterWithHiddenObserver(client.report.bind(client), apdexTearDownGroup, [initSubjectInGlobal(client, hiddenSubject), initSubjectInGlobal(client, unloadSubject)], config), 4), handlePageview = _b[0], handleSend_1 = _b[1], reportWithApdex = _b[2], setApdexSetting_1 = _b[3];
            report = reportWithApdex;
            handlePageviewChange = handlePageview;
            client.on('send', handleSend_1);
            apdexTearDownGroup.push(function () { return client.off('send', handleSend_1); });
            client.on('start', function () {
                setApdexSetting_1(client.config().apdex);
            });
            registerTearDownGroup(client, PAGEVIEW_MONITOR_PLUGIN_NAME, SESSION_EV_TYPE, apdexTearDownGroup);
        }
        // apdex end
        var tearDownGroup = [];
        var _c = __read(pvGetterWithRouteObserver(report, tearDownGroup, isManualMode(routeMode) ? [] : [client.initSubject(hashSubject), client.initSubject(historySubject)], __assign(__assign({}, config), { initPid: (_a = client.config()) === null || _a === void 0 ? void 0 : _a.pid, onPidUpdate: function (pid) {
                var viewId = getViewId(pid);
                // the apdex score must be settled when reporting, needs to know the change before reporting
                handlePageviewChange(pid, viewId);
                client.set({ pid: pid, viewId: viewId, actionId: undefined });
            } })), 1), sendPageview = _c[0];
        initPrivateSubject(client, [FIRST_PV_SUBJECT_NAME, applyFirstPV(client)], -1);
        var onConfig = function () {
            sendPageview(client.config().pid);
        };
        client.on('config', onConfig);
        tearDownGroup.push(function () { return client.off('config', onConfig); });
        registerTearDownGroup(client, PAGEVIEW_MONITOR_PLUGIN_NAME, PAGEVIEW_EV_TYPE, tearDownGroup);
        client.provide('sendPageview', sendPageview);
    });
}//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/sdk-web/esm/plugins/monitors/pageview.js.map
import { __read } from "tslib";
import test from 'ava';
import { initMetric } from '../../performance/util';
import { applyHandleEntries, CLS_METRIC_NAME } from '../cls';
test('applyHandleEntries - normally', function (t) {
    var _a = __read(applyHandleEntries(), 2), resetSessionValue = _a[0], handleEntriesWithMetric = _a[1];
    var metric = initMetric(CLS_METRIC_NAME, 0);
    var handleEntries = handleEntriesWithMetric.bind(null, function (sessionValue) {
        sessionValue > metric.value && (metric.value = sessionValue);
    });
    handleEntries({
        value: 0.00001,
        hadRecentInput: false,
        startTime: 3540.5,
        entryType: 'layout-shift',
    });
    handleEntries({
        value: 0.00003,
        hadRecentInput: false,
        startTime: 3640.5,
        entryType: 'layout-shift',
    });
    t.is(metric.value, 0.00004);
    metric = initMetric(CLS_METRIC_NAME, 0);
    t.is(metric.value, 0);
    resetSessionValue();
    handleEntries({
        value: 0.00001,
        hadRecentInput: false,
        startTime: 3840.5,
        entryType: 'layout-shift',
    });
    handleEntries({
        value: 0.00001,
        hadRecentInput: false,
        startTime: 3940.5,
        entryType: 'layout-shift',
    });
    t.is(metric.value, 0.00002);
});
test('applyHandleEntries with hadRecentInput', function (t) {
    var _a = __read(applyHandleEntries(), 2), handleEntriesWithMetric = _a[1];
    var metric = initMetric(CLS_METRIC_NAME, 0);
    var handleEntries = handleEntriesWithMetric.bind(null, function (sessionValue) {
        sessionValue > metric.value && (metric.value = sessionValue);
    });
    handleEntries({
        value: 0.00001,
        hadRecentInput: true,
        startTime: 3540.5,
        entryType: 'layout-shift',
    });
    t.is(metric.value, 0);
    handleEntries({
        value: 0.00003,
        hadRecentInput: false,
        startTime: 3640.5,
        entryType: 'layout-shift',
    });
    t.is(metric.value, 0.00003);
    handleEntries({
        value: 0.00005,
        hadRecentInput: true,
        startTime: 3740,
        entryType: 'layout-shift',
    });
    t.is(metric.value, 0.00003);
    // a another new session
    handleEntries({
        value: 0.0001,
        hadRecentInput: false,
        startTime: 9000,
        entryType: 'layout-shift',
    });
    t.is(metric.value, 0.0001);
    // a another new session
    handleEntries({
        value: 0.0002,
        hadRecentInput: false,
        startTime: 12000,
        entryType: 'layout-shift',
    });
    t.is(metric.value, 0.0002);
});//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/sdk-web/esm/monitors/performance-new/__test__/cls.spec.js.map
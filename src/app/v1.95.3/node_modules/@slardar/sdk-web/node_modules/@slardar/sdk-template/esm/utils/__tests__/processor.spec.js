import test from 'ava';
import { runProcessors, runFilters } from '../processor';
test('runProcessors', function (t) {
    var v = 5;
    var p1 = function (v) { return v * 2; };
    var p2 = function (v) { return v + 1000; };
    var p3 = function (v) { return (v % 2 ? v : false); };
    t.is(runProcessors([p1])(v), 10);
    t.is(runProcessors([p1, p2])(v), 1010);
    t.is(runProcessors([p1, p2, p3])(v), false);
    t.is(runProcessors([p1, p3])(v), false);
    t.is(runProcessors([p1, p3, p2])(v), false);
    t.is(runProcessors([p2])(v), 1005);
    t.is(runProcessors([p2, p1])(v), 2010);
    t.is(runProcessors([p2, p1, p3])(v), false);
    t.is(runProcessors([p2, p3])(v), 1005);
    t.is(runProcessors([p2, p3, p1])(v), 2010);
    t.is(runProcessors([p3])(v), 5);
    t.is(runProcessors([p3, p1])(v), 10);
    t.is(runProcessors([p3, p1, p2])(v), 1010);
    t.is(runProcessors([p3, p2])(v), 1005);
    t.is(runProcessors([p3, p2, p1])(v), 2010);
});
test('runFilters', function (t) {
    var v = 5;
    var k = -1;
    var p1 = function () { return true; };
    var p2 = function () { return false; };
    var p3 = function (k) { return (k > 1 ? true : false); };
    t.is(runFilters([p1])(v), true);
    t.is(runFilters([p1, p2])(v), false);
    t.is(runFilters([p1, p2, p3])(v), false);
    t.is(runFilters([p1, p3])(v), true);
    t.is(runFilters([p1, p3, p2])(v), false);
    t.is(runFilters([p2])(v), false);
    t.is(runFilters([p2, p1])(v), false);
    t.is(runFilters([p2, p1, p3])(v), false);
    t.is(runFilters([p2, p3])(v), false);
    t.is(runFilters([p2, p3, p1])(v), false);
    t.is(runFilters([p3])(v), true);
    t.is(runFilters([p3, p1])(v), true);
    t.is(runFilters([p3, p1, p2])(v), false);
    t.is(runFilters([p3, p2])(v), false);
    t.is(runFilters([p3, p2, p1])(v), false);
    t.is(runFilters([p1])(k), true);
    t.is(runFilters([p1, p2])(k), false);
    t.is(runFilters([p1, p2, p3])(k), false);
    t.is(runFilters([p1, p3])(k), false);
    t.is(runFilters([p1, p3, p2])(k), false);
    t.is(runFilters([p2])(k), false);
    t.is(runFilters([p2, p1])(k), false);
    t.is(runFilters([p2, p1, p3])(k), false);
    t.is(runFilters([p2, p3])(k), false);
    t.is(runFilters([p2, p3, p1])(k), false);
    t.is(runFilters([p3])(k), false);
    t.is(runFilters([p3, p1])(k), false);
    t.is(runFilters([p3, p1, p2])(k), false);
    t.is(runFilters([p3, p2])(k), false);
    t.is(runFilters([p3, p2, p1])(k), false);
});//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/sdk-web/node_modules/@slardar/sdk-template/esm/utils/__tests__/processor.spec.js.map
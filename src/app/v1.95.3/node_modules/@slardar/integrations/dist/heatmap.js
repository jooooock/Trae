'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var HEATMAP_EV_TYPE = 'heatmap';

var HEATMAP_INTEGRATION_NAME = 'heatmap';
var heatmap = function () {
    var heatmap;
    return {
        name: HEATMAP_INTEGRATION_NAME,
        setup: function (client) {
            var getExports = function (code) {
                var module = { exports: {} };
                // eslint-disable-next-line
                var fn = new Function('module', 'exports', code);
                try {
                    fn(module, module.exports);
                    return module.exports;
                }
                catch (err) {
                    return {};
                }
            };
            function request(url, callback) {
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, true);
                xhr.onload = function (e) {
                    var response = e.target.response;
                    response && callback(response);
                };
                xhr.send();
            }
            client.on('start', function () {
                var _a;
                var heatmapConfig = (_a = client.config()) === null || _a === void 0 ? void 0 : _a.plugins[HEATMAP_INTEGRATION_NAME];
                if (!heatmapConfig) {
                    return;
                }
                var open_list = heatmapConfig.open_list, url = heatmapConfig.url;
                if (!url) {
                    return;
                }
                var callback = function (res) {
                    var createHeatmap = getExports(res).createHeatmap;
                    if (!createHeatmap) {
                        return;
                    }
                    var config = {
                        open_list: open_list,
                    };
                    heatmap = createHeatmap({
                        config: config,
                        sendEvent: function (args) { return client.report(args); },
                    });
                    heatmap.init();
                    client.destroyAgent.set(HEATMAP_INTEGRATION_NAME, HEATMAP_EV_TYPE, [function () { return heatmap === null || heatmap === void 0 ? void 0 : heatmap.destroy(); }]);
                };
                request(url, callback);
            });
        },
    };
};

exports.heatmap = heatmap;//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/integrations/dist/heatmap.js.map

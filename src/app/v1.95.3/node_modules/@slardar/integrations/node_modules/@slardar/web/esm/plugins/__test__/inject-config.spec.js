import { __assign } from "tslib";
import test from 'ava';
import sinon from 'sinon';
import { getXhrTransport } from '@slardar/sdk-web';
import { createTestWebClient } from '../../__test__/util';
import { addConfigToReportEvent, InjectConfigPlugin } from '../inject-config';
test('addConfigToReportEvent', function (t) {
    var ev = {
        ev_type: 'pageview',
        payload: {
            pid: 'init-pid',
            source: 'init',
        },
    };
    var config = {
        bid: 'test-bid',
        pid: 'test-pid',
        viewId: 'test-pid_0',
        userId: 'test-user',
        deviceId: 'test-device',
        sessionId: 'test-session',
        release: 'init-release',
        env: 'test-env',
        domain: '',
        pluginPathPrefix: '',
        plugins: {},
        transport: getXhrTransport(),
    };
    t.deepEqual(addConfigToReportEvent(ev, config), __assign(__assign({}, ev), { extra: {
            bid: 'test-bid',
            user_id: 'test-user',
            device_id: 'test-device',
            session_id: 'test-session',
            release: 'init-release',
            env: 'test-env',
        } }));
});
test('InjectConfigPlugin', function (t) {
    var client = createTestWebClient();
    InjectConfigPlugin(client);
    client.init({
        bid: 'test-bid',
        pid: 'test-pid',
        userId: 'test-user',
        deviceId: 'test-device',
        release: 'init-release',
        env: 'test-env',
        domain: '',
        pluginPathPrefix: '',
        plugins: {},
    });
    client.start();
    var onBuild = sinon.fake();
    client.on('build', onBuild);
    client.report({
        ev_type: 'pageview',
        payload: {
            pid: 'init-pid',
            source: 'init',
        },
    });
    t.assert(onBuild.calledOnce);
    t.like(onBuild.args[0][0], {
        ev_type: 'pageview',
        payload: {
            pid: 'init-pid',
            source: 'init',
        },
    });
    t.like(onBuild.args[0][0].extra, {
        bid: 'test-bid',
        user_id: 'test-user',
        device_id: 'test-device',
        session_id: '',
        release: 'init-release',
        env: 'test-env',
    });
});//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/integrations/node_modules/@slardar/web/esm/plugins/__test__/inject-config.spec.js.map
/* eslint-disable @typescript-eslint/prefer-nullish-coalescing */
import { initSubjectInGlobal, initPrivateSubject, registerTearDownGroup } from '@slardar/sdk-template';
import { applyPV, PV_SUBJECT_NAME, reportWithCurrentContext } from '../../collector/client';
import { XHR_SUBJECT_NAME, applyXHR, fetchSubject } from '../../collector/http';
import { longtaskSubject, resourceSubject } from '../../collector/perf';
import { PERFORMANCE_METRIC_EV_TYPE } from '../../constants';
import { getTTI } from '../../monitors/performance-new/tti';
import { getPluginConfig } from './utils';
export var TTI_MONITOR_PLUGIN_NAME = 'tti';
export function TTIMonitorPlugin(client) {
    client.on('init', function () {
        var config = getPluginConfig(client, TTI_MONITOR_PLUGIN_NAME, {});
        if (!config) {
            return;
        }
        var tearDownGroup = [];
        getTTI(reportWithCurrentContext(client), tearDownGroup, [
            initSubjectInGlobal(client, [XHR_SUBJECT_NAME, applyXHR(XMLHttpRequest && XMLHttpRequest.prototype)]),
            initSubjectInGlobal(client, fetchSubject),
            initSubjectInGlobal(client, longtaskSubject),
            initSubjectInGlobal(client, resourceSubject),
            initPrivateSubject(client, [PV_SUBJECT_NAME, applyPV(client)]),
        ], client.pp);
        registerTearDownGroup(client, TTI_MONITOR_PLUGIN_NAME, PERFORMANCE_METRIC_EV_TYPE, tearDownGroup);
    });
}//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/integrations/node_modules/@slardar/sdk-web/esm/plugins/monitors/tti.js.map
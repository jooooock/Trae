import { __read } from "tslib";
import { CLICK_EVENT_NAME, DOM_EVENT_TYPE } from '../../collector/dom';
import { applyBreadcrumb, applyDomAndKeyPress, domBreadcrumb, triggerHandlers, } from './util';
export var breadcrumbGetterWithDomObserver = function (tearDownGroup, _a, config) {
    var _b = __read(_a, 2), clickObserver = _b[0], keypressObserver = _b[1];
    var maxBreadcrumbs = config.maxBreadcrumbs, onAddBreadcrumb = config.onAddBreadcrumb, onMaxBreadcrumbs = config.onMaxBreadcrumbs, dom = config.dom;
    var _c = __read(applyDomAndKeyPress(100), 2), domEventHandler = _c[0], keypressHandler = _c[1];
    var _d = __read(applyBreadcrumb(maxBreadcrumbs, onAddBreadcrumb, onMaxBreadcrumbs), 2), getBreadcrumbs = _d[0], addBreadcrumb = _d[1];
    if (dom) {
        var createDomBreadcrumb = domBreadcrumb(addBreadcrumb);
        tearDownGroup.push(clickObserver[0](domEventHandler(CLICK_EVENT_NAME, triggerHandlers(createDomBreadcrumb, DOM_EVENT_TYPE))));
        tearDownGroup.push(keypressObserver[0](keypressHandler(triggerHandlers(createDomBreadcrumb, DOM_EVENT_TYPE))));
    }
    return [getBreadcrumbs, addBreadcrumb];
};//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/integrations/node_modules/@slardar/sdk-web/esm/monitors/breadcrumb/index.js.map
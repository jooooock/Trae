export function createDestroyAgent() {
    var destroyed = false;
    var data = {};
    var removeTearDownGroup = function (tearDownGroup) {
        tearDownGroup.length &&
            tearDownGroup.forEach(function (v) {
                try {
                    v();
                    // eslint-disable-next-line no-empty
                }
                catch (_a) { }
            });
        tearDownGroup.length = 0;
    };
    var removeByPluginName = function (pluginName) {
        data[pluginName] &&
            data[pluginName].forEach(function (e) {
                removeTearDownGroup(e[1]);
            });
        data[pluginName] = undefined;
    };
    var removeByEvType = function (evType) {
        Object.keys(data).forEach(function (k) {
            data[k] &&
                data[k].forEach(function (e) {
                    if (e[0] === evType) {
                        removeTearDownGroup(e[1]);
                    }
                });
        });
    };
    return {
        /**
         * register tearDownGroup for a single plugin.
         */
        set: function (pluginName, evType, tearDownGroup) {
            if (data[pluginName])
                data[pluginName].push([evType, tearDownGroup]);
            else
                data[pluginName] = [[evType, tearDownGroup]];
            // auto remove tearDownGroup if destroyed
            destroyed && removeTearDownGroup(tearDownGroup);
        },
        has: function (pluginName) {
            return !!data[pluginName];
        },
        /**
         * remove tearDownGroup for a single plugin.
         */
        remove: removeByPluginName,
        /**
         * remove tearDownGroup by event type
         */
        removeByEvType: removeByEvType,
        /**
         * clear all tearDownGroup
         */
        clear: function () {
            destroyed = true;
            Object.keys(data).forEach(function (k) {
                removeByPluginName(k);
            });
        },
    };
}
/**
 * 将tearDownGroup 注册到 destroyAgent，destroyAgent会在实例销毁时自动销毁tearDownGroup
 */
export var registerTearDownGroup = function (client, pluginName, evType, tearDownGroup) {
    return client.destroyAgent.set(pluginName, evType, tearDownGroup);
};//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/integrations/node_modules/@slardar/sdk-template/esm/utils/destroy.js.map
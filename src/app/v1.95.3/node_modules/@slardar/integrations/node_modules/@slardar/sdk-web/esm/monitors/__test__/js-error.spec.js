import test from 'ava';
import { normalizeError, normalizeException } from '../js-error/util';
test('JsErrorMonitor - normalize js error', function (t) {
    var error = new Error('123');
    var v1 = normalizeError({ error: error });
    var v2 = normalizeError({
        error: {
            message: 'some error message',
        },
    });
    var v3 = normalizeError({});
    t.like(v1, {
        message: '123',
    });
    t.deepEqual(v2, {
        message: JSON.stringify({
            message: 'some error message',
        }),
    });
    t.is(v3, undefined);
});
test('JsErrorMonitor - normalize exception', function (t) {
    var v1 = normalizeException({ reason: '1' });
    var v2 = normalizeException({ detail: { reason: '2' } });
    var v3 = normalizeException({});
    t.deepEqual(v1, { message: '1', name: 'UnhandledRejection' });
    t.deepEqual(v2, { message: '2', name: 'UnhandledRejection' });
    t.is(v3, undefined);
});//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/integrations/node_modules/@slardar/sdk-web/esm/monitors/__test__/js-error.spec.js.map
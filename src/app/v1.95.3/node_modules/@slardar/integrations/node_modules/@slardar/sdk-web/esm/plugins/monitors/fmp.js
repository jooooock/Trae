import { initSubjectInGlobal, initPrivateSubject, registerTearDownGroup } from '@slardar/sdk-template';
import { PV_SUBJECT_NAME, applyPV, reportWithCurrentContext } from '../../collector/client';
import { loadSubject, unloadSubject, hiddenSubject } from '../../collector/page';
import { PERFORMANCE_METRIC_EV_TYPE } from '../../constants';
import { getFMP } from '../../monitors/performance-new/fmp';
import { getPaint, FP_ENTRY_NAME } from '../../monitors/performance-new/paint';
import { getPluginConfig } from './utils';
export var FMP_MONITOR_PLUGIN_NAME = 'fmp';
var defaultConfig = {
    renderType: 'CSR',
};
export function FMPMonitorPlugin(client) {
    client.on('init', function () {
        var config = getPluginConfig(client, FMP_MONITOR_PLUGIN_NAME, defaultConfig);
        if (!config) {
            return;
        }
        var tearDownGroup = [];
        var loadObserver = initSubjectInGlobal(client, loadSubject);
        if (config.renderType === 'SSR') {
            // @ts-expect-error
            getPaint(FP_ENTRY_NAME, FMP_MONITOR_PLUGIN_NAME, reportWithCurrentContext(client), tearDownGroup, [
                initSubjectInGlobal(client, hiddenSubject),
                initSubjectInGlobal(client, unloadSubject),
            ]);
        }
        else {
            getFMP(reportWithCurrentContext(client), tearDownGroup, [
                loadObserver,
                initPrivateSubject(client, [PV_SUBJECT_NAME, applyPV(client)]),
            ]);
        }
        registerTearDownGroup(client, FMP_MONITOR_PLUGIN_NAME, PERFORMANCE_METRIC_EV_TYPE, tearDownGroup);
    });
}//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/integrations/node_modules/@slardar/sdk-web/esm/plugins/monitors/fmp.js.map
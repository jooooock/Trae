import { __assign, __read, __rest } from "tslib";
import { noop } from '@slardar/sdk-template';
import { createBrowserSender, getXhrTransport } from '@slardar/sdk-web';
export var DOUBLE_REPORT_INTEGRATION_NAME = 'doubleReport';
export var doubleReportPlugin = function (_a) {
    var bid = _a.bid;
    var tearDownFn = noop;
    return {
        name: DOUBLE_REPORT_INTEGRATION_NAME,
        setup: function (client) {
            var _a = __read(doubleReport(client, bid), 2), _ = _a[0], tearDown = _a[1];
            tearDownFn = tearDown;
        },
        tearDown: function () { return tearDownFn(); },
    };
};
export var BATCH_REPORT_PATH = process.env.SDK_SLARDAR_REPORT_BATCH_PATH;
var REPORT_DOMAIN = process.env.SDK_SLARDAR_REPORT_DOMAIN;
export var getReportUrl = function (domain, path) {
    if (path === void 0) { path = BATCH_REPORT_PATH; }
    return "" + (domain && domain.indexOf('//') >= 0 ? '' : 'https://') + domain + path;
};
export function doubleReport(client, bid) {
    var sender = createBrowserSender({
        size: 20,
        endpoint: getReportUrl(REPORT_DOMAIN),
        transport: getXhrTransport(),
    });
    var slardarConfig = {};
    var onStart = function () {
        var config = client.config();
        if (!config)
            return;
        var session_id = config.sessionId, device_id = config.deviceId, env = config.env, release = config.release, user_id = config.userId, sdk_offset = config.offset;
        slardarConfig = {
            session_id: session_id,
            device_id: device_id,
            env: env,
            release: release,
            user_id: user_id,
        };
        sdk_offset && (slardarConfig['sdk_offset'] = sdk_offset);
    };
    client.on('start', onStart);
    var onSend = function (e) {
        var _a = e.common, aid = _a.aid, params = __rest(_a, ["aid"]);
        sender.send(__assign(__assign({}, e), { common: __assign(__assign(__assign({}, params), slardarConfig), { bid: bid }) }));
        return e;
    };
    client.on('send', onSend);
    var tearDownFn = function () {
        client.off('start', onStart);
        client.off('send', onSend);
    };
    return [sender, tearDownFn];
}//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/integrations/esm/doubleReport.js.map
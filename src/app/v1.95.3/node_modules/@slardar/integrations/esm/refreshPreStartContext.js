/*
 * @Author: pengli.coder
 * @Date: 2021-10-27 20:04:51
 * @LastEditTime: 2021-10-27 20:30:06
 * @LastEditors: Please set LastEditors
 * @Description: refresh the context of the pre-start queue with the context at start
 */
import { __assign } from "tslib";
import { noop } from '@slardar/sdk-template/';
export var REFRESH_PRE_START_CONTEXT_INTEGRATION_NAME = 'refreshPreStartContext';
export var refreshPreStartContext = function () {
    var tearDownFn = noop;
    return {
        name: REFRESH_PRE_START_CONTEXT_INTEGRATION_NAME,
        setup: function (client) {
            var onStart = function () {
                var preStartQueue = client.getPreStartQueue();
                preStartQueue.forEach(function (ev, index) {
                    var _a, _b;
                    preStartQueue[index] = __assign(__assign({}, ev), { overrides: __assign(__assign({}, ((_a = ev.overrides) !== null && _a !== void 0 ? _a : {})), { 
                            // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing
                            context: ((_b = client === null || client === void 0 ? void 0 : client.context) === null || _b === void 0 ? void 0 : _b.toString()) || {} }) });
                });
            };
            client.on('start', onStart);
            tearDownFn = function () { return client.off('start', onStart); };
        },
        tearDown: function () { return tearDownFn(); },
    };
};//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/integrations/esm/refreshPreStartContext.js.map
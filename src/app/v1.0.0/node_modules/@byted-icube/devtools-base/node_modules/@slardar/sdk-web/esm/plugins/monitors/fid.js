import { __assign } from "tslib";
import { initSubjectInGlobal, initPrivateSubject, registerTearDownGroup } from '@slardar/sdk-template';
import { applyFirstPV, FIRST_PV_SUBJECT_NAME } from '../../collector/client';
import { hiddenSubject, activatedSubject } from '../../collector/page';
import { PERFORMANCE_METRIC_EV_TYPE } from '../../constants';
import { FID } from '../../monitors/performance-new';
export var FID_MONITOR_PLUGIN_NAME = FID[0];
export function FIDMonitorPlugin(client) {
    client.on('init', function () {
        var activatedObserver = initSubjectInGlobal(client, activatedSubject);
        var getHiddenObserver = function () { return initSubjectInGlobal(client, hiddenSubject); };
        var overrides = undefined;
        var firstPVObserver = initPrivateSubject(client, [FIRST_PV_SUBJECT_NAME, applyFirstPV(client)], -1);
        firstPVObserver[0](function (o) {
            overrides = o;
        })();
        var reportMetric = function (data) {
            // every first screen metrics needs to be associated with the context when client init
            client.report(__assign(__assign({}, data), { overrides: overrides }));
        };
        var tearDown = [];
        FID[1](reportMetric, tearDown, [activatedObserver, getHiddenObserver]);
        registerTearDownGroup(client, FID_MONITOR_PLUGIN_NAME, PERFORMANCE_METRIC_EV_TYPE, tearDown);
    });
}//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@byted-icube/devtools-base/node_modules/@slardar/sdk-web/esm/plugins/monitors/fid.js.map
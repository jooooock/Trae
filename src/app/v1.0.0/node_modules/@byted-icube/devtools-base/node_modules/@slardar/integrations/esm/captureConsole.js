import { __read, __spreadArray } from "tslib";
/* eslint-disable @typescript-eslint/prefer-optional-chain */
/*
 * @Author: pengli.coder
 * @Date: 2021-11-12 16:04:51
 * @LastEditTime: 2021-11-12 20:30:06
 * @LastEditors: Please set LastEditors
 * @Description: refresh the context of the pre-start queue with the context at start
 */
import { hookMethodDangerously, safeJoin } from '@slardar/sdk-template';
import { getDefaultBrowser, JS_ERROR_EV_TYPE } from '@slardar/sdk-web';
export var CAPTURE_CONSOLE_INTEGRATION_NAME = 'captureConsole';
export var captureConsole = function (_a) {
    var _b = _a.levels, levels = _b === void 0 ? ['log', 'info', 'warn', 'error', 'debug', 'assert'] : _b;
    return ({
        name: CAPTURE_CONSOLE_INTEGRATION_NAME,
        setup: function (client) {
            var global = getDefaultBrowser();
            if (!global || !global.console)
                return;
            var tearDownGroup = [];
            levels.forEach(function (level) {
                if (!(level in global.console)) {
                    return;
                }
                var hookConsoleLevel = function (origin) {
                    return function () {
                        var params = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            params[_i] = arguments[_i];
                        }
                        try {
                            origin && origin.call.apply(origin, __spreadArray([global.console], __read(params), false));
                        }
                        finally {
                            client('captureException', safeJoin(params, ' '));
                        }
                    };
                };
                tearDownGroup.push(hookMethodDangerously(global.console, level, hookConsoleLevel)());
            });
            // it have to set JS_ERROR_EV_TYPE,because that is depend on the client('captureException')
            client.destroyAgent.set(CAPTURE_CONSOLE_INTEGRATION_NAME, JS_ERROR_EV_TYPE, tearDownGroup);
        },
    });
};//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@byted-icube/devtools-base/node_modules/@slardar/integrations/esm/captureConsole.js.map
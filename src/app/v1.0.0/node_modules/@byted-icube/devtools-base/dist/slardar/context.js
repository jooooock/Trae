"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getIsA0 = exports.getIsDev = exports.getUserId = exports.getVRegion = exports.getVRegionByRegion = exports.getEnv = exports.getDefaultContextFromEnv = exports.VRegionMap = exports.VRegion = void 0;
const types_1 = require("../types");
var VRegion;
(function (VRegion) {
    VRegion["USEast"] = "US-East";
    VRegion["SG"] = "Singapore-Central";
    VRegion["BOEI18N"] = "US-BOE";
    VRegion["BOE"] = "China-BOE";
    VRegion["CN"] = "China-North";
})(VRegion || (exports.VRegion = VRegion = {}));
exports.VRegionMap = {
    [types_1.Region.US]: VRegion.USEast,
    [types_1.Region.SG]: VRegion.SG,
    [types_1.Region.BOEI18N]: VRegion.BOEI18N,
    [types_1.Region.BOE]: VRegion.BOE,
    [types_1.Region.CN]: VRegion.CN,
};
function getDefaultContextFromEnv(env) {
    const { CLOUDIDE_WORKSPACE_ID = '', IDE_ENVIRONMENT_NAME = '', CLOUDIDE_CONFIG_RUNTIME = '', IDE_LANG = '', CLOUDIDE_USERID = '', IDE_OWNER = '', CLOUDIDE_RUNTIME_DEBUG_PORT = '', VSCODE_CWD = '', CLOUDIDE_PROVIDER_REGION = '', CLOUDIDE_TENANT_NAME = '', CLOUDIDE_IDE_SERVER_TYPE = '', CLOUDIDE_ENABLE_DOUBLE_CONTAINER = '', CLOUDIDE_CONTROL_PLANE = '', CLOUDIDE_FEATURE_ENV = '', CLOUDIDE_CONFIG_LANGUAGE = '', CLOUDIDE_PROJECT_TEMPLATE_SLUG = '', CLOUDIDE_PROJECT_REPO_SPECIFIED = '', } = env;
    const icubeVersion = VSCODE_CWD.split('@')[1] || '';
    return {
        workspace_id: CLOUDIDE_WORKSPACE_ID,
        ide_workspace_id: CLOUDIDE_WORKSPACE_ID,
        ide_project_template_slug: CLOUDIDE_PROJECT_TEMPLATE_SLUG,
        ide_project_repo_specified: `${CLOUDIDE_PROJECT_REPO_SPECIFIED}` || 'false',
        ide_environment_name: IDE_ENVIRONMENT_NAME,
        ide_config_runtime: CLOUDIDE_CONFIG_RUNTIME,
        ide_lang: IDE_LANG,
        ide_template_language: CLOUDIDE_CONFIG_LANGUAGE,
        ide_user_id: CLOUDIDE_USERID,
        ide_owner: IDE_OWNER,
        ide_runtime_debug_port: CLOUDIDE_RUNTIME_DEBUG_PORT,
        ide_icube_version: icubeVersion,
        ide_provider_region: CLOUDIDE_PROVIDER_REGION,
        ide_tenant_name: CLOUDIDE_TENANT_NAME,
        ide_server_type: CLOUDIDE_IDE_SERVER_TYPE,
        ide_enable_double_container: CLOUDIDE_ENABLE_DOUBLE_CONTAINER,
        ide_control_plane: CLOUDIDE_CONTROL_PLANE,
        x_env: CLOUDIDE_FEATURE_ENV || 'prod',
        ide_env: CLOUDIDE_FEATURE_ENV,
    };
}
exports.getDefaultContextFromEnv = getDefaultContextFromEnv;
function getEnv(env) {
    const { CLOUDIDE_FEATURE_ENV } = env;
    return CLOUDIDE_FEATURE_ENV || 'prod';
}
exports.getEnv = getEnv;
function getVRegionByRegion(region) {
    return exports.VRegionMap[region];
}
exports.getVRegionByRegion = getVRegionByRegion;
function getVRegion(env) {
    const { CLOUDIDE_CONTROL_PLANE = '', CLOUDIDE_PROVIDER_REGION = '', IDE_REGION = '', CLOUDIDE_APISERVER_BASE_URL = '', } = env;
    // 外场
    switch (CLOUDIDE_CONTROL_PLANE) {
        case 'i18n':
            return CLOUDIDE_PROVIDER_REGION === 'us' ? VRegion.USEast : VRegion.SG;
        case 'boei18n':
            return VRegion.BOEI18N;
        case 'boe':
            return VRegion.BOE;
        case 'cn':
            return VRegion.CN;
        case 'sg':
            return VRegion.SG;
        default:
            break;
    }
    // 内场
    switch (IDE_REGION) {
        case 'sg':
            return VRegion.SG;
        case 'us':
            return VRegion.USEast;
        default:
            return CLOUDIDE_APISERVER_BASE_URL?.includes('boe') ? VRegion.BOE : VRegion.CN;
    }
}
exports.getVRegion = getVRegion;
function getUserId(env) {
    const { CLOUDIDE_USERID = '' } = env;
    return CLOUDIDE_USERID || 'unknown';
}
exports.getUserId = getUserId;
function getIsDev(env) {
    const { NODE_ENV = '' } = env;
    return NODE_ENV === 'development';
}
exports.getIsDev = getIsDev;
function getIsA0(env) {
    const { CLOUDIDE_IDE_SERVER_TYPE = '' } = env;
    return `${CLOUDIDE_IDE_SERVER_TYPE === 'icube_a0'}`;
}
exports.getIsA0 = getIsA0;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseLogger = void 0;
const ILogger_1 = require("./ILogger");
class BaseLogger {
    _level = ILogger_1.LogLevel.Info;
    ctx;
    constructor(ctx = {}) {
        this.ctx = ctx;
    }
    generateMsg(msg) {
        let result = msg || '';
        if (this.ctx['sessionId']) {
            result = `[${this.ctx['sessionId']}]${result}`;
        }
        if (this.ctx['runtime']) {
            result = `[${this.ctx['runtime']}]${result}`;
        }
        // Slardar 上报依赖原始类型做判断
        if (msg instanceof Error) {
            msg.message = result;
            return msg;
        }
        return result;
    }
    info(msg, ...args) {
        if (this._level < ILogger_1.LogLevel.Info)
            return;
        this._log(ILogger_1.LogLevel.Info, this.generateMsg(msg), ...args);
    }
    debug(msg, ...args) {
        if (this._level < ILogger_1.LogLevel.Debug)
            return;
        this._log(ILogger_1.LogLevel.Debug, this.generateMsg(msg), ...args);
    }
    trace(msg, ...args) {
        if (this._level < ILogger_1.LogLevel.Trace)
            return;
        this._log(ILogger_1.LogLevel.Trace, this.generateMsg(msg), ...args);
    }
    warn(msg, ...args) {
        if (this._level < ILogger_1.LogLevel.Warn)
            return;
        this._log(ILogger_1.LogLevel.Warn, this.generateMsg(msg), ...args);
    }
    error(msg, ...args) {
        if (this._level < ILogger_1.LogLevel.Error)
            return;
        this._log(ILogger_1.LogLevel.Error, this.generateMsg(msg), ...args);
    }
    setLevel(level) {
        this._level = level;
    }
    getLevel() {
        return this._level;
    }
    log(level, msg, ...args) {
        this._log(level, msg, ...args);
    }
    getLogger(_type) {
        return this;
    }
}
exports.BaseLogger = BaseLogger;

"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TronClientWebChecker = void 0;
const clientBase_1 = require("./clientBase");
const api_1 = __importDefault(require("./api"));
const logger_1 = __importDefault(require("./logger"));
class TronClientWebChecker extends clientBase_1.TronClientBase {
    constructor(config) {
        super(config);
        this.branch = '';
        if (config.branch) {
            this.branch = config.branch;
        }
        else {
            this.branch = 'master';
        }
    }
    /**
     * check for update
     */
    checkForUpdate() {
        return __awaiter(this, void 0, void 0, function* () {
            return api_1.default
                .get(`${clientBase_1.CHECK_API}?pid=${this.pid}&branch=${this.branch}&buildId=&uid=`, {
                withCredentials: false,
            })
                .then(res => {
                logger_1.default.info(`update info: ${JSON.stringify(res, null, 2)}`);
                return res;
            });
        });
    }
}
exports.TronClientWebChecker = TronClientWebChecker;//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@ies/tron-client/dist/core/clientWebChecker.js.map
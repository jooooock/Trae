import test from 'ava';
import { findElementWithAttributeByParents, getActionName, getActionNameByAttribute, isSupportsElementClosest, isSVGTarget, isElementWithinTwoLevels, isValidTarget, DEFAULT_ATTR_NAME, } from '../action/util';
var browserEnv = require('browser-env');
test.before(function () {
    browserEnv();
    // eslint-disable-next-line compat/compat
    document.body.innerHTML = "\n<div>\n  <span id=\"username\">username</span>\n  <button id=\"button\">button</button>\n  <input id=\"input\" />\n</div>";
});
test.serial('isSupportsElementClosest should be true when closest in HTMLElement.prototype', function (t) {
    t.true(isSupportsElementClosest());
});
test('findElementWithAttributeByParents', function (t) {
    // eslint-disable-next-line compat/compat
    document.body.innerHTML = "\n<div>\n  <button id=\"button\" data-apm-action=\"button-action-name\">\n    <div>\n      <span id=\"button-span\">this is button-span</span>\n    </div>\n  </button>\n</div>";
    var button = document.getElementById('button');
    var buttonSpan = document.getElementById('button-span');
    t.deepEqual(button, findElementWithAttributeByParents(buttonSpan, 'data-apm-action'));
    t.falsy(findElementWithAttributeByParents(buttonSpan, 'data-apm-action', 1));
});
test('getActionNameByAttribute', function (t) {
    var actionName = 'button-action-name';
    var spanActionName = 'span-action-name';
    // eslint-disable-next-line compat/compat
    document.body.innerHTML = "\n<div>\n  <button id=\"button\" data-apm-action=\"" + actionName + "\">\n    <div id=\"button-div\">\n      <span id=\"button-span\">this is button-span</span>\n    </div>\n  </button>\n  <span id=\"span-lonely\">this is a lonely span</span>\n  <span id=\"span-attr\"  data-apm-action=\"" + spanActionName + "\">this is span with action name</span>\n</div>";
    var button = document.getElementById('button');
    var buttonDiv = document.getElementById('button-div');
    var buttonSpan = document.getElementById('button-span');
    var spanLonely = document.getElementById('span-lonely');
    var spanWithAttr = document.getElementById('span-attr');
    t.is(getActionNameByAttribute(button, DEFAULT_ATTR_NAME), actionName);
    t.is(getActionNameByAttribute(buttonDiv, DEFAULT_ATTR_NAME), actionName);
    t.is(getActionNameByAttribute(buttonSpan, DEFAULT_ATTR_NAME), actionName);
    t.is(getActionNameByAttribute(spanLonely, DEFAULT_ATTR_NAME), undefined);
    t.is(getActionNameByAttribute(spanWithAttr, DEFAULT_ATTR_NAME), spanActionName);
});
test('getActionName', function (t) {
    var actionName_1 = 'button-action-name_1';
    var actionName_3 = 'button-action-name_3';
    // eslint-disable-next-line compat/compat
    document.body.innerHTML = "\n<div>\n  <button id=\"button_1\" data-apm-action=\"" + actionName_1 + "\">\n    <div>\n      <span id=\"button-span_1\">this is button-span_1</span>\n    </div>\n  </button>\n  <button id=\"button_2\">\n      <span id=\"button-span_2\">this is button-span_2</span>\n  </button>\n  <button id=\"button_3\">\n      <span id=\"button-span_3\" data-apm-action=\"" + actionName_3 + "\">this is button-span_2</span>\n  </button>\n</div>";
    var span_1 = document.getElementById('button-span_1');
    var span_2 = document.getElementById('button-span_2');
    var span_3 = document.getElementById('button-span_3');
    // hack for current test
    span_2.innerText = span_2.innerHTML;
    t.is(getActionName(span_1, DEFAULT_ATTR_NAME), actionName_1);
    t.is(getActionName(span_2, DEFAULT_ATTR_NAME), 'this is button-span_2');
    t.is(getActionName(span_3, DEFAULT_ATTR_NAME), actionName_3);
});
test('isSVGTarget', function (t) {
    // eslint-disable-next-line compat/compat
    document.body.innerHTML = "\n  <div><div id=\"div\"><svg id=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"><path d=\"M56\"><path d=\"M32\" id=\"path\"></path></path></svg></div></div>";
    t.false(isSVGTarget(document.getElementById('div')));
    t.true(isSVGTarget(document.getElementById('icon')));
    t.true(isSVGTarget(document.getElementById('path')));
});
test('isElementWithinTwoLevels', function (t) {
    // eslint-disable-next-line compat/compat
    document.body.innerHTML = "\n  <div><div id=\"div\"><svg id=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"><path id=\"path1\" d=\"M56\"><path d=\"M32\" id=\"path\"></path></path></svg></div></div>";
    var div = document.getElementById('div');
    var svg = document.getElementById('icon');
    var path1 = document.getElementById('path1');
    var path = document.getElementById('path');
    t.false(isElementWithinTwoLevels(div));
    t.false(isElementWithinTwoLevels(svg));
    t.true(isElementWithinTwoLevels(path1));
    t.true(isElementWithinTwoLevels(path));
});
test('isValidTarget', function (t) {
    // eslint-disable-next-line compat/compat
    document.body.innerHTML = "\n  <div>\n  <a id=\"none_a\" style=\"display: none;\"></a>\n  <a id=\"a\"></a>\n  <input id=\"input\" />\n  <button id=\"button\" >confirm<button>\n  <textarea id=\"textarea\">text</textarea>\n\n  <div id=\"attr1\" data-apm-action=\"action-name\"></div>\n  <div id=\"attr2\" data-apm-action=\"action-name\"><div><div>222<div></div></div></div></div>\n  <div id=\"level\"><div><div>222<div></div></div></div></div>\n  <div id=\"div\"><svg id=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"><path id=\"path1\" d=\"M56\"><path d=\"M32\" id=\"path\"></path></path></svg></div></div>";
    // svg
    t.false(isValidTarget(document.getElementById('icon')));
    t.false(isValidTarget(document.getElementById('path')));
    t.false(isValidTarget(document.getElementById('path1')));
    // display: none
    t.false(isValidTarget(document.getElementById('none_a')));
    // a & input & button & textarea
    t.true(isValidTarget(document.getElementById('a')));
    t.true(isValidTarget(document.getElementById('input')));
    t.true(isValidTarget(document.getElementById('button')));
    t.true(isValidTarget(document.getElementById('textarea')));
    // attr
    t.true(isValidTarget(document.getElementById('attr1')));
    t.true(isValidTarget(document.getElementById('attr2')));
    // level not within two
    t.false(isValidTarget(document.getElementById('level')));
    t.false(isValidTarget(document.getElementById('div')));
});//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/web/node_modules/@slardar/sdk-web/esm/monitors/__test__/action.spec.js.map
import test from 'ava';
import sinon from 'sinon';
import { getPrintString } from '@slardar/sdk-template';
test.serial('getPrintString should work when padStart is not available', function (t) {
    var printString = getPrintString();
    t.notThrows(function () {
        printString('test');
    });
    t.notThrows(function () {
        // eslint-disable-next-line no-console
        console.log('test'.padStart(8, ''));
    });
    var sb = sinon.createSandbox();
    sb.stub(String.prototype, 'padStart').value(undefined);
    var printString_2 = getPrintString();
    t.notThrows(function () {
        printString_2('test');
    });
    t.throws(function () {
        // eslint-disable-next-line no-console
        console.log('test'.padStart(8, ''));
    });
    sb.restore();
});//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/sdk-template/esm/utils/__tests__/logger.spec.js.map
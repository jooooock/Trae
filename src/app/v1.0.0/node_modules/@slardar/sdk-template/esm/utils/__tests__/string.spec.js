import test from 'ava';
import { camelToKebab, getRegexp, joinQueryWithMap, joinRegExp, safeStringify, checkIfHit } from '../string';
test('camelToKebab', function (t) {
    t.is(camelToKebab('snake'), 'snake');
    t.is(camelToKebab('snakeHouse'), 'snake-house');
    t.is(camelToKebab('snakeHouseBall'), 'snake-house-ball');
    t.is(camelToKebab('snakeHouseBall.js'), 'snake-house-ball.js');
    t.is(camelToKebab(''), '');
});
test('getRegexp', function (t) {
    // @ts-expect-error
    t.is(getRegexp(), null);
    // @ts-expect-error
    t.is(getRegexp(1), null);
    t.is(getRegexp([]), null);
});
test('joinRegExp', function (t) {
    t.is(joinRegExp(['a', 'b', 'a.b', /d/, /[0-9]/]).source, 'a|b|a\\.b|d|[0-9]');
    // @ts-expect-error
    t.is(joinRegExp(['a', 'b', null, undefined]).source, 'a|b');
    // @ts-expect-error
    t.is(joinRegExp(['a', 'b', null, 'a.b', undefined, true, /d/, 123, {}, /[0-9]/, []]).source, 'a|b|a\\.b|d|[0-9]');
    t.is(joinRegExp(['/monitor_web/collect', '/monitor_browser/collect/batch']).source, '\\/monitor_web\\/collect|\\/monitor_browser\\/collect\\/batch');
});
test('checkIfHit', function (t) {
    t.is(checkIfHit(['abb'], 'abb'), true);
    t.is(checkIfHit(['abc'], 'abb'), false);
    t.is(checkIfHit(['abb', 'abc'], 'ab'), false);
    t.is(checkIfHit(['abb', 'abc'], 'abc'), true);
    t.is(checkIfHit(['a', 'b', 'a.b', /d/, /[0-9]/], 'a'), true);
    t.is(checkIfHit(['a', 'b', 'a.b', /d/, /[0-9]/], 'b'), true);
    t.is(checkIfHit(['a', 'b', 'a.b', /d/, /[0-9]/], 'd'), true);
    t.is(checkIfHit(['a', 'b', 'a.b', /d/, /[0-9]/], 'a.b'), true);
    t.is(checkIfHit(['a', 'b', 'a.b', /d/, /[0-9]/], 'cdc'), true);
    t.is(checkIfHit(['a', 'b', 'a.b', /d/, /[0-9]/], '1'), true);
    t.is(checkIfHit(['a', 'b', 'a.b', /d/, /[0-9]/], 'xwx'), false);
    // @ts-expect-error
    t.is(checkIfHit(['a', 'b', null, undefined], 'c'), false);
    // @ts-expect-error
    t.is(checkIfHit(['a', 'b', null, 'a.b', undefined, true, /d/, 123, {}, /[0-9]/, []], 'cdc'), true);
    t.is(checkIfHit([/\/(api|app|application)\/.*/], 'app/'), false);
    t.is(checkIfHit([/\/(api|app|application)\/.*/], '/app/'), true);
    t.is(checkIfHit([/\/(api|app|application)\/.*/], '/appx/'), false);
    t.is(checkIfHit([/\/(api|app|application)\/.*/, /\/c\/v\/api\/.*/], '/c/v/api/'), true);
    t.is(checkIfHit([/\/(api|app|application)\/.*/, /\/c\/v\/api\/.*/], '/c/v/api9/'), false);
});
test('safeStringify', function (t) {
    var cycle = { a: null };
    cycle.a = cycle;
    t.true(safeStringify(cycle).includes('[FAILED_TO_STRINGIFY]'));
    t.is(safeStringify({}), '{}');
    t.is(safeStringify({ a: 1 }), '{"a":1}');
    t.is(safeStringify(3), '3');
    t.is(safeStringify('str'), 'str');
    t.is(safeStringify([]), '[]');
    t.is(safeStringify(['str', 3, { a: 1 }]), '["str",3,{"a":1}]');
});
test('joinQueryWithMap', function (t) {
    t.is(joinQueryWithMap({}), '');
    t.is(joinQueryWithMap(null), '');
    t.is(joinQueryWithMap({ a: 1 }), '?a=1');
    t.is(joinQueryWithMap({ a: '1', b: 2 }), '?a=1&b=2');
    t.is(joinQueryWithMap({ a: '1', b: 2, c: {} }), '?a=1&b=2&c=[object Object]');
});//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/sdk-template/esm/utils/__tests__/string.spec.js.map
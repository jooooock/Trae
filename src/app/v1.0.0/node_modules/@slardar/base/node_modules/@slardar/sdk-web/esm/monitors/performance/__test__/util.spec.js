import ava from 'ava';
import sinon from 'sinon';
import { onceHidden } from '../util';
var browserEnv = require('browser-env');
var test = ava;
test.serial('onceHidden', function (t) {
    browserEnv();
    var cb = sinon.fake();
    var sb = sinon.createSandbox();
    sb.stub(document, 'visibilityState').value('prerender');
    onceHidden(cb);
    t.assert(cb.notCalled);
    sb.stub(document, 'visibilityState').value('visible');
    document.dispatchEvent(new window.Event('visibilitychange'));
    t.assert(cb.notCalled);
    sb.stub(document, 'visibilityState').value('hidden');
    document.dispatchEvent(new window.Event('visibilitychange'));
    t.assert(cb.calledOnce);
    sb.stub(document, 'visibilityState').value('visible');
    document.dispatchEvent(new window.Event('visibilitychange'));
    t.assert(cb.calledOnce);
    sb.stub(document, 'visibilityState').value('hidden');
    document.dispatchEvent(new window.Event('visibilitychange'));
    t.assert(cb.calledOnce);
    sb.restore();
});
test.serial('onceHidden - once', function (t) {
    browserEnv();
    var cb = sinon.fake();
    var sb = sinon.createSandbox();
    sb.stub(document, 'visibilityState').value('prerender');
    onceHidden(cb);
    t.assert(cb.notCalled);
    sb.stub(document, 'visibilityState').value('visible');
    document.dispatchEvent(new window.Event('visibilitychange'));
    t.assert(cb.notCalled);
    sb.stub(document, 'visibilityState').value('hidden');
    document.dispatchEvent(new window.Event('visibilitychange'));
    t.assert(cb.calledOnce);
    sb.stub(document, 'visibilityState').value('visible');
    document.dispatchEvent(new window.Event('visibilitychange'));
    t.assert(cb.calledOnce);
    sb.stub(document, 'visibilityState').value('hidden');
    document.dispatchEvent(new window.Event('visibilitychange'));
    t.assert(cb.calledOnce);
    sb.restore();
});
test.serial('onceHidden - forever', function (t) {
    browserEnv();
    var cb = sinon.fake();
    var sb = sinon.createSandbox();
    sb.stub(document, 'visibilityState').value('prerender');
    onceHidden(cb, false);
    t.assert(cb.notCalled);
    sb.stub(document, 'visibilityState').value('visible');
    document.dispatchEvent(new window.Event('visibilitychange'));
    t.assert(cb.notCalled);
    sb.stub(document, 'visibilityState').value('hidden');
    document.dispatchEvent(new window.Event('visibilitychange'));
    t.assert(cb.calledOnce);
    sb.stub(document, 'visibilityState').value('visible');
    document.dispatchEvent(new window.Event('visibilitychange'));
    t.assert(cb.calledOnce);
    sb.stub(document, 'visibilityState').value('hidden');
    document.dispatchEvent(new window.Event('visibilitychange'));
    t.assert(cb.calledTwice);
    sb.restore();
});//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/base/node_modules/@slardar/sdk-web/esm/monitors/performance/__test__/util.spec.js.map
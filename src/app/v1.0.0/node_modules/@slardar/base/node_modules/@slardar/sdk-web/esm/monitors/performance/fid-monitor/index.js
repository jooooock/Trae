import { __read } from "tslib";
import { applyPerformance, applyPerformanceObserver, getDefaultPerformance, getDefaultPerformanceObserver, invokeCallbackOnce, } from '../../../utils';
import { initMetric } from '../util';
var FI = 'first-input';
var FIDMonitorMetricName = 'fid';
export var FIDMonitor = function (PerformanceObserver, performance) {
    if (PerformanceObserver === void 0) { PerformanceObserver = getDefaultPerformanceObserver(); }
    if (performance === void 0) { performance = getDefaultPerformance(); }
    return function (_props, cb) {
        var metric = initMetric(FIDMonitorMetricName, 0);
        var _a = __read(invokeCallbackOnce(cb), 1), invokeCbOnce = _a[0];
        if (!performance || !PerformanceObserver) {
            metric.isSupport = false;
            invokeCbOnce(metric);
            return;
        }
        var invokeCb = function (_a) {
            var processingStart = _a.processingStart, startTime = _a.startTime;
            metric.value = processingStart - startTime;
            invokeCbOnce(metric);
        };
        // 先从 performance 里拿一下 FI，拿不到则用 PerformanceObserver 监听
        var _b = __read(applyPerformance(performance), 3), getEntriesByType = _b[2];
        var historyEntry = getEntriesByType(FI)[0];
        if (historyEntry) {
            invokeCb(historyEntry);
        }
        else {
            var _c = __read(applyPerformanceObserver(PerformanceObserver, invokeCb, true), 1), observe = _c[0];
            observe(FI);
        }
    };
};//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/base/node_modules/@slardar/sdk-web/esm/monitors/performance/fid-monitor/index.js.map
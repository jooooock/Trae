import test from 'ava';
import sinon from 'sinon';
import { createTestWebClient } from '../../../utils/__test__/util';
import { BreadcrumbMonitorPlugin } from '../breadcrumb';
var browserEnv = require('browser-env');
test.before(function () {
    browserEnv();
});
test('BreadcrumbMonitorPlugin - disabled', function (t) {
    var client = createTestWebClient();
    BreadcrumbMonitorPlugin(client);
    t.falsy(client.getBreadcrumbs);
    t.falsy(client.addBreadcrumb);
    client.init({});
    t.falsy(client.getBreadcrumbs);
    t.falsy(client.addBreadcrumb);
});
test('BreadcrumbMonitorPlugin', function (t) {
    var _a, _b, _c, _d, _e;
    var client = createTestWebClient();
    BreadcrumbMonitorPlugin(client);
    t.falsy(client.getBreadcrumbs);
    t.falsy(client.addBreadcrumb);
    client.init({
        plugins: {
            breadcrumb: true,
        },
    });
    t.assert(client.getBreadcrumbs);
    t.assert(client.addBreadcrumb);
    t.deepEqual((_a = client.getBreadcrumbs) === null || _a === void 0 ? void 0 : _a.call(client), []);
    (_b = client.addBreadcrumb) === null || _b === void 0 ? void 0 : _b.call(client, {
        type: 'dom',
        category: 'ui.click',
        message: 'body',
    });
    t.like((_c = client.getBreadcrumbs) === null || _c === void 0 ? void 0 : _c.call(client)[0], {
        type: 'dom',
        category: 'ui.click',
        message: 'body',
    });
    client.report({
        ev_type: 'http',
        payload: {
            api: 'fetch',
            request: {
                method: 'GET',
                url: 'http://www.toutiao.com/login?uid=jack',
                timestamp: 0,
            },
            response: {
                status: 233,
                is_custom_error: false,
                timestamp: 333,
            },
            duration: 333,
        },
    });
    t.like((_d = client.getBreadcrumbs) === null || _d === void 0 ? void 0 : _d.call(client)[0], {
        type: 'dom',
        category: 'ui.click',
        message: 'body',
    });
    t.like((_e = client.getBreadcrumbs) === null || _e === void 0 ? void 0 : _e.call(client)[1], {
        type: 'http',
        category: 'fetch',
        message: '',
        data: {
            method: 'GET',
            url: 'http://www.toutiao.com/login?uid=jack',
            status_code: '233',
        },
    });
});
test('BreadcrumbMonitorPlugin config maxBreadcrumbs', function (t) {
    var _a, _b, _c, _d, _e, _f;
    var client = createTestWebClient();
    BreadcrumbMonitorPlugin(client);
    client.init({
        plugins: {
            breadcrumb: { maxBreadcrumbs: 2 },
        },
    });
    (_a = client.addBreadcrumb) === null || _a === void 0 ? void 0 : _a.call(client, {
        type: 'dom',
        category: 'ui.click',
        message: 'first click',
    });
    (_b = client.addBreadcrumb) === null || _b === void 0 ? void 0 : _b.call(client, {
        type: 'dom',
        category: 'ui.click',
        message: 'second click',
    });
    (_c = client.addBreadcrumb) === null || _c === void 0 ? void 0 : _c.call(client, {
        type: 'dom',
        category: 'ui.click',
        message: 'thrid click',
    });
    t.like((_d = client.getBreadcrumbs) === null || _d === void 0 ? void 0 : _d.call(client)[0], {
        type: 'dom',
        category: 'ui.click',
        message: 'second click',
    });
    t.like((_e = client.getBreadcrumbs) === null || _e === void 0 ? void 0 : _e.call(client)[1], {
        type: 'dom',
        category: 'ui.click',
        message: 'thrid click',
    });
    t.falsy((_f = client.getBreadcrumbs) === null || _f === void 0 ? void 0 : _f.call(client)[2]);
});
test('BreadcrumbMonitorPlugin config onAddBreadcrumb', function (t) {
    var _a, _b;
    var client = createTestWebClient();
    var onAddBreadcrumb = sinon.fake.returns({
        type: 'dom',
        category: 'ui.click',
        message: 'changed data',
    });
    BreadcrumbMonitorPlugin(client);
    client.init({
        plugins: {
            breadcrumb: { onAddBreadcrumb: onAddBreadcrumb },
        },
    });
    (_a = client.addBreadcrumb) === null || _a === void 0 ? void 0 : _a.call(client, {
        type: 'dom',
        category: 'ui.click',
        message: 'first click',
    });
    t.true(onAddBreadcrumb.calledOnce);
    t.deepEqual(onAddBreadcrumb.args[0][0], {
        type: 'dom',
        category: 'ui.click',
        message: 'first click',
    });
    t.like((_b = client.getBreadcrumbs) === null || _b === void 0 ? void 0 : _b.call(client)[0], {
        type: 'dom',
        category: 'ui.click',
        message: 'changed data',
    });
});
test('BreadcrumbMonitorPlugin config onMaxBreadcrumbs', function (t) {
    var _a, _b, _c, _d;
    var client = createTestWebClient();
    var onMaxBreadcrumbs = sinon.fake.returns([]);
    BreadcrumbMonitorPlugin(client);
    client.init({
        plugins: {
            breadcrumb: { maxBreadcrumbs: 2, onMaxBreadcrumbs: onMaxBreadcrumbs },
        },
    });
    (_a = client.addBreadcrumb) === null || _a === void 0 ? void 0 : _a.call(client, {
        type: 'dom',
        category: 'ui.click',
        message: 'first click',
    });
    t.true(onMaxBreadcrumbs.notCalled);
    (_b = client.addBreadcrumb) === null || _b === void 0 ? void 0 : _b.call(client, {
        type: 'dom',
        category: 'ui.click',
        message: 'second click',
    });
    t.true(onMaxBreadcrumbs.notCalled);
    (_c = client.addBreadcrumb) === null || _c === void 0 ? void 0 : _c.call(client, {
        type: 'dom',
        category: 'ui.click',
        message: 'thrid click',
    });
    t.true(onMaxBreadcrumbs.calledOnce);
    t.like(onMaxBreadcrumbs.args[0][0][2], {
        type: 'dom',
        category: 'ui.click',
        message: 'thrid click',
    });
    t.true(typeof onMaxBreadcrumbs.args[0][0][2].timestamp === 'number');
    t.true(onMaxBreadcrumbs.args[0][1] === 2);
    t.falsy((_d = client.getBreadcrumbs) === null || _d === void 0 ? void 0 : _d.call(client).length);
});//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/base/node_modules/@slardar/sdk-web/esm/plugins/monitors/__test__/breadcrumb.spec.js.map
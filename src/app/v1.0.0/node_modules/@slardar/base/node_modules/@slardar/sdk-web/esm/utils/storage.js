import { __assign, __rest } from "tslib";
import { isNumber } from '@slardar/sdk-template';
import { now } from './date';
import { decodeWithBase64, encodeToBase64 } from './encryption';
export var getStorageWithDecoding = function (name) {
    try {
        var value = localStorage.getItem(name);
        var ret = value;
        if (value && typeof value === 'string') {
            ret = JSON.parse(decodeWithBase64(value));
        }
        // get 时无需刷新 expires，在后续的 configManager 中的 set 会刷新
        var _a = ret, expires = _a.expires, content = __rest(_a, ["expires"]);
        return expires >= now() ? content : undefined;
    }
    catch (_e) {
        return undefined;
    }
};
export var setStorageWithEncoding = function (key, value, expires) {
    if (expires <= 0)
        return;
    try {
        localStorage.setItem(key, encodeToBase64(JSON.stringify(__assign(__assign({}, value), { expires: now() + expires }))));
    }
    catch (_o) {
        // do nothing
    }
};
export var removeStorageItem = function (key) {
    try {
        localStorage.removeItem(key);
    }
    catch (_o) {
        // do nothing
    }
};
export var DEFAULT_STORAGE_EXPIRES = 90 * 24 * 60 * 60 * 1000;
export var formatStorageExpires = function (storageExpires) {
    if (storageExpires === false)
        return 0;
    if (storageExpires === true || storageExpires === undefined || !isNumber(storageExpires))
        return DEFAULT_STORAGE_EXPIRES;
    return storageExpires;
};//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/base/node_modules/@slardar/sdk-web/esm/utils/storage.js.map
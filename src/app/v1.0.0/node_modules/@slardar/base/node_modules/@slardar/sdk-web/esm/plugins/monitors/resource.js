import { initSubjectInGlobal, registerTearDownGroup } from '@slardar/sdk-template';
import { loadSubject } from '../../collector/page';
import { resourceSubject } from '../../collector/perf';
import { RESOURCE_EV_TYPE } from '../../constants';
import { resourceGetterWithContext } from '../../monitors/resource';
import { getConfig } from '../../utils';
export var RESOURCE_MONITOR_PLUGIN_NAME = 'resource';
var defaultConfig = {
    ignoreUrls: [],
    slowSessionThreshold: 4000,
};
export function ResourceMonitorBasePlugin(client, c) {
    var config = getConfig(c, defaultConfig);
    if (!config) {
        return;
    }
    var tearDownGroup = [];
    resourceGetterWithContext(client.report.bind(client), tearDownGroup, [initSubjectInGlobal(client, loadSubject), function () { return initSubjectInGlobal(client, resourceSubject); }], config);
    registerTearDownGroup(client, RESOURCE_MONITOR_PLUGIN_NAME, RESOURCE_EV_TYPE, tearDownGroup);
}
export function ResourceMonitorPlugin(client) {
    client.on('init', function () {
        var _a;
        var config = (_a = client.config()) === null || _a === void 0 ? void 0 : _a.plugins[RESOURCE_MONITOR_PLUGIN_NAME];
        ResourceMonitorBasePlugin(client, config);
    });
}//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/base/node_modules/@slardar/sdk-web/esm/plugins/monitors/resource.js.map
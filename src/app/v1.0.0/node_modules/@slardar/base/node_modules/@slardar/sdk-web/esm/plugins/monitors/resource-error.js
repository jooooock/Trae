import { initSubjectInGlobal, registerTearDownGroup } from '@slardar/sdk-template';
import { errorSubject } from '../../collector/error';
import { RESOURCE_ERROR_EV_TYPE } from '../../constants';
import { resourceErrorGetterWithContext } from '../../monitors/resource-error';
import { getPluginConfig } from './utils';
export var RESOURCE_ERROR_MONITOR_PLUGIN_NAME = 'resourceError';
var defaultConfig = {
    includeUrls: [],
    ignoreUrls: [],
    dedupe: true,
    gatherPath: false,
};
export function ResourceErrorMonitorPlugin(client) {
    client.on('init', function () {
        var config = getPluginConfig(client, RESOURCE_ERROR_MONITOR_PLUGIN_NAME, defaultConfig);
        if (!config) {
            return;
        }
        var tearDownGroup = [];
        var reportResourceError = resourceErrorGetterWithContext(client.report.bind(client), tearDownGroup, [initSubjectInGlobal(client, errorSubject)], config);
        registerTearDownGroup(client, RESOURCE_ERROR_MONITOR_PLUGIN_NAME, RESOURCE_ERROR_EV_TYPE, tearDownGroup);
        reportResourceError && client.provide('reportResourceError', reportResourceError);
    });
}//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/base/node_modules/@slardar/sdk-web/esm/plugins/monitors/resource-error.js.map
import test from 'ava';
import sinon from 'sinon';
import { noop } from '@slardar/sdk-template';
import { createMinimalClient } from '../../client';
import { addEnvToSendEvent, InjectEnvPlugin } from '../inject-env';
test('addEnvToSendEvent', function (t) {
    var ev = {
        ev_type: 'pageview',
        payload: {
            pid: 'init-pid',
            source: 'init',
        },
        extra: {
            url: 'origin url',
        },
    };
    var config = {
        bid: 'test-bid',
        pid: 'test-pid',
        viewId: 'test-pid_0',
        userId: 'test-user',
        deviceId: 'test-device',
        sessionId: 'test-session',
        release: 'init-release',
        env: 'test-env',
        domain: '',
        plugins: {},
        name: 'test-SDK',
        version: '1.0.0',
        transport: { get: noop, post: noop },
    };
    t.like(addEnvToSendEvent(ev, config), {
        ev_type: 'pageview',
        payload: {
            pid: 'init-pid',
            source: 'init',
        },
        extra: {
            url: 'origin url',
            protocol: '',
            domain: '',
            path: '',
            query: '',
            sdk_version: '1.0.0',
            sdk_name: 'test-SDK',
        },
    });
});
test('InjectEnvPlugin', function (t) {
    var client = createMinimalClient();
    InjectEnvPlugin(client);
    client.init({
        bid: 'bid',
        pid: 'pid',
        transport: { get: noop, post: noop },
        name: 'test-SDK',
        version: '1.0.0',
    });
    var onReport = sinon.fake();
    client.on('report', onReport);
    client.report({
        ev_type: 'pageview',
        payload: {
            pid: 'init-pid',
            source: 'init',
        },
        extra: {
            url: 'origin url',
        },
    });
    t.assert(onReport.calledOnce);
    t.like(onReport.args[0][0], {
        ev_type: 'pageview',
        payload: {
            pid: 'init-pid',
            source: 'init',
        },
        extra: {
            url: 'origin url',
            protocol: '',
            domain: '',
            path: '',
            query: '',
            sdk_version: '1.0.0',
            sdk_name: 'test-SDK',
        },
    });
});//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/base/esm/plugins/__test__/inject-env.spec.js.map
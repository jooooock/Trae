import { __read } from "tslib";
import { observePerf } from '../../collector/perf';
import { getDefaultPerformanceObserver, getDefaultPerformance, applyPerformance } from '../../utils';
import { initMetric } from '../performance/util';
import { applySendOnceAndTearDown, wrapPerformanceMetric } from './util';
export var FI_ENTRY_NAME = 'first-input';
export var FID_METRIC_NAME = "fid" /* fid */;
var getFID = function (report, tearDownGroup) {
    var PerformanceObserver = getDefaultPerformanceObserver();
    var performance = getDefaultPerformance();
    var metric = initMetric(FID_METRIC_NAME, 0);
    var sendOnceAndTearDown = applySendOnceAndTearDown(wrapPerformanceMetric, report, tearDownGroup);
    if (!performance || !PerformanceObserver) {
        metric.isSupport = false;
        sendOnceAndTearDown(metric);
        return;
    }
    var invokePaint = function (_a) {
        var processingStart = _a.processingStart, startTime = _a.startTime;
        metric.value = processingStart - startTime;
        sendOnceAndTearDown(metric);
    };
    var _a = __read(applyPerformance(performance), 3), getEntriesByType = _a[2];
    var paint = getEntriesByType(FI_ENTRY_NAME)[0];
    if (paint) {
        invokePaint(paint);
        return;
    }
    tearDownGroup.push(observePerf(PerformanceObserver, invokePaint, [FI_ENTRY_NAME]));
};
export var FID = [FID_METRIC_NAME, getFID];//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/integrations/node_modules/@slardar/sdk-web/esm/monitors/performance-new/fid.js.map
import { __assign } from "tslib";
import { id, noop } from './misc';
import { mergeDeepConcatArray } from './object-array';
export var noopSender = {
    send: function () { },
};
export var noopBuilder = {
    build: function () { },
};
export var directBuilder = {
    build: id,
};
export var createBaseConfigManager = function (c) {
    var onChange = noop;
    var config = c;
    return {
        getConfig: function () {
            return config;
        },
        setConfig: function (c) {
            config = __assign(__assign({}, config), c);
            onChange();
            return config;
        },
        onChange: function (fn) {
            onChange = fn;
        },
        onReady: function (fn) {
            fn();
        },
    };
};
export var createMergeConfigManager = function (c) {
    var onChange = noop;
    var config = c;
    return {
        getConfig: function () {
            return config;
        },
        setConfig: function (c) {
            config = mergeDeepConcatArray(config, c);
            onChange();
            return config;
        },
        onChange: function (fn) {
            onChange = fn;
        },
        onReady: function (fn) {
            fn();
        },
    };
};//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/integrations/node_modules/@slardar/sdk-template/esm/utils/basic.js.map
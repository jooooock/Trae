import { createBatchSender, stringifyBatch } from '@slardar/sdk-template';
import { getBeaconTransport } from './transports';
import { onPageUnload, onPageNextShow } from './utils';
// istanbul ignore not working for export { ... } from statements
// https://github.com/istanbuljs/nyc/issues/1209
/* istanbul ignore next */
export { createBatchSender } from '@slardar/sdk-template';
// createSender has side effects(register onClose behavior)
// so it must be create lazily
export function createBrowserSender(config) {
    var sender = createBatchSender(config);
    var originSend = sender.send;
    // send the cached data immediately upon unload
    onPageUnload(function () {
        // use sendBeacon if allowed
        if (config.transport.useBeacon) {
            var beaconTransport_1 = getBeaconTransport();
            var data = sender.getBatchData();
            if (data) {
                beaconTransport_1.post(sender.getEndpoint(), data);
                sender.clear();
            }
            // some data may still be generated during unload
            sender.send = function (data) {
                beaconTransport_1.post(sender.getEndpoint(), stringifyBatch([data]));
            };
            // in webview, page can still be resurrected even after the `unload` event has been triggered
            onPageNextShow(function () {
                sender.send = originSend;
            });
        }
        else {
            // if not use sendBeacon, flush the data list by default
            sender.flush();
        }
    });
    return sender;
}//# sourceMappingURL=https://trae.private/sourcemaps/424b4bd987c6c6a4cadf1a08da420593cc6bf75a/node_modules/@slardar/integrations/node_modules/@slardar/sdk-web/esm/sender.js.map
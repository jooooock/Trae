"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FindIdentifierTool = void 0;
const tslib_1 = require("tslib");
const i_tool_1 = require("../../common/base/i-tool");
const enum_1 = require("../../typing/enum");
let FindIdentifierTool = class FindIdentifierTool extends i_tool_1.ITool {
    async run() {
        this._logger.info("Finding identifier...", JSON.stringify(this._input));
        const { filePath, identifier } = this._input;
        let output = {
            identifiers: []
        };
        const fullPath = await this._ide.getWorkspacePath(filePath);
        const fileStream = await this._ide.createWorkspaceReadStream(fullPath);
        const rl = fileStream.split('\n');
        const pattern = new RegExp(`(?<![\w$])${identifier}(?![\w$])`);
        let lineNumber = 0;
        for await (const line of rl) {
            lineNumber++;
            const match = pattern.exec(line);
            if (match) {
                output.identifiers.push({
                    line: lineNumber,
                    content: line
                });
            }
        }
        return output;
    }
};
exports.FindIdentifierTool = FindIdentifierTool;
exports.FindIdentifierTool = FindIdentifierTool = tslib_1.__decorate([
    (0, i_tool_1.ToolImpl)(enum_1.ToolType.FIND_IDENTIFIER)
], FindIdentifierTool);

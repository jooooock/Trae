"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Timeout = Timeout;
const utils_1 = require("../common/utils");
function Timeout(ms) {
    return function (target, propertyKey, descriptor) {
        const originalMethod = descriptor.value;
        utils_1.Utils.assert(originalMethod, `Method ${target.constructor.name}.${propertyKey} not found`);
        descriptor.value = function (...args) {
            return new Promise((resolve, reject) => {
                const timer = setTimeout(() => {
                    reject(new Error(`Function ${target.constructor.name}.${propertyKey} timed out after ${ms}ms`));
                }, ms);
                Promise.resolve(originalMethod.apply(this, args))
                    .then((result) => {
                    clearTimeout(timer);
                    resolve(result);
                })
                    .catch((err) => {
                    clearTimeout(timer);
                    reject(err);
                });
            });
        };
        return descriptor;
    };
}
